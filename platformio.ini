; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


[platformio]
default_envs = esp32

[env:esp32]
platform = espressif32
board = esp32doit-devkit-v1
framework = arduino
monitor_speed = 115200
upload_speed = 215200
; Uncomment this line to allow for remote upgrade. If name resolution does not work for you, replace with the IP of ESPAltherma
; upload_port = ESPAltherma.local

lib_deps = 
	PubSubClient

[env:m5stickc]
platform = espressif32
board = m5stick-c
framework = arduino
monitor_speed = 115200
upload_speed = 215200
; Uncomment this line to allow for remote upgrade. If name resolution does not work for you, replace with the IP of ESPAltherma
; upload_port = ESPAltherma.local

lib_deps = 
	M5StickC
	PubSubClient

[env:m5stickcplus]
platform = espressif32
board = m5stick-c
framework = arduino
monitor_speed = 115200
upload_speed = 215200
; Uncomment this line to allow for remote upgrade. If name resolution does not work for you, replace with the IP of ESPAltherma
; upload_port = ESPAltherma.local

lib_deps = 
	M5StickCPlus
	PubSubClient

build_flags = "-D ARDUINO_M5Stick_C_Plus"

; ESP8266 boards below this line:
; -------------------------------
[env:nodemcuv2]
platform = espressif8266@^2
board = nodemcuv2
framework = arduino
; Uncomment this line to allow for remote upgrade. If name resolution does not work for you, replace with the IP of ESPAltherma
; upload_protocol = espota
; upload_port = ESPAltherma.local
lib_deps = 
	PubSubClient

[env:esp01_1m]
platform = espressif8266@^2
board = esp01_1m
framework = arduino
;upload_port = COM3
; Uncomment this line to allow for remote upgrade. If name resolution does not work for you, replace with the IP of ESPAltherma
upload_protocol = espota
upload_port = ESPAltherma.local
lib_deps = 
	PubSubClient